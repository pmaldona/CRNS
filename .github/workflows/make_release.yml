name: release-pipeline
on:
  push:
    branches:
      - 'UI-Refactor'
    # tags:
    #   - 'v*.*.*'
    # paths:
    #   - 'docs/**.md'
    #   - 'docs/images/**'
  # workflow_run:
  #   workflows: ["CI build"]
  #   types:
  #     - completed
jobs:
  make_release:
    name: Make Release
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: version
        run: echo "::set-output name=version::${GITHUB_REF#refs/*/}"
        id: version
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: changelog.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: glibc version
        run: ldd --version
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: pip version
        run: pip --version
      - name: pip3 version
        run: pip3 --version
      - name: python version
        run: python --version
      - name: python3 version
        run: python3 --version
      - name: pip list
        run: pip list
      - name: Build PDF
        uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: docs
          output_dir: pdfs
          images_dir: docs/images
          # for example <img src="./images/file-name.png">
          image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: false
      - run: ls 
      - run: ls docs
      - run: ls pdfs
      - name: upload docs artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pdfs/main.pdf
          asset_name: main.pdf
          asset_content_type: application/pdf
  
